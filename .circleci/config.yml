version: 2.1

jobs:
  build-code:
    docker:
      - image: cimg/openjdk:8.0.345
    working_directory: ~/tmp
    steps:
      - checkout
      - run:
          name: "build"
          command: |
            echo ">---------- build ----------<"
            mvn -B -DskipTests clean package
      - store_artifacts:
          path: target/udacity-capstone-0.0.1-SNAPSHOT.jar
  test-code:
    docker:
      - image: cimg/openjdk:8.0.345
    steps:
      - checkout
      - run:
          name: "test"
          command: |
            echo ">---------- test ----------<"
#            mvn test
  scan-code:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "scan"
          command: |
            echo ">---------- TODO scan ----------<"
  package-build:
    docker:
      - image: cimg/openjdk:8.0.345
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run:
          name: "package"
          command: |
            echo ">---------- package ----------<"
            set -ex
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            echo $TAG
            sudo apt -y install jq
            curl 'https://circleci.com/api/v1.1/project/github/ehabrefaat82/udacity-capstone/200/artifacts' | jq '.[0]["url"]' | xargs curl -o udacity-capstone-0.0.1-SNAPSHOT.jar
            ls
            cat Dockerfile
            docker build --build-arg build_number="${CIRCLE_BUILD_NUM}" --tag=${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:$TAG .
            docker run -p 8070:8070 --name somename -d ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:$TAG
            docker login --username ${DOCKER_USER} --password ${DOCKER_PASS}
            docker push ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:$TAG
  create-eks:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "  create-eks"
          command: |
            echo ">---------- create-eks ----------<"
            echo "EKS should be create on time, to use cloud formation creating the cluster"
            echo ".../project/.crcleci/eks>  ./create-stack.sh capstoneEKS eks-config.yaml"
  deploy-package:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "deploy"
          command: "echo deploy"
  smoke-test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "smoke-test"
          command: "echo smoke-test"
  publish:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "publish"
          command: "echo publish"
  clean-up:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: "clean-up"
          command: "echo clean-up"
workflows:
  default-workflow:
    jobs:
      - build-code
      - test-code:
          requires:
            - build-code
      - scan-code:
          requires:
            - test-code
      - package-build:
          requires:
            - scan-code
      - create-eks:
          requires:
            - scan-code
      - deploy-package:
          requires:
            - package-build
            - create-eks
      - smoke-test:
          requires:
            - deploy-package
      - publish:
          requires:
            - smoke-test
      - clean-up:
          requires:
            - publish
